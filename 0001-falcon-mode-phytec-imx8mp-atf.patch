diff --git a/bl31/bl31_main.c b/bl31/bl31_main.c
index 9ac10e2..d3cd980 100644
--- a/bl31/bl31_main.c
+++ b/bl31/bl31_main.c
@@ -121,19 +121,25 @@ void bl31_setup(u_register_t arg0, u_register_t arg1, u_register_t arg2,
 void bl31_main(void)
 {
 	NOTICE("BL31: %s\n", version_string);
-	NOTICE("BL31: %s\n", build_message);
+	NOTICE("BL31 : %s\n", build_message);
 
+NOTICE("BL31: _jarsulk: main 1 a\n");
 #ifdef SUPPORT_UNKNOWN_MPID
+NOTICE("BL31: _jarsulk: main 1 b\n");
 	if (unsupported_mpid_flag == 0) {
+NOTICE("BL31: _jarsulk: main 1 c\n");
 		NOTICE("Unsupported MPID detected!\n");
 	}
 #endif
 
+NOTICE("BL31: _jarsulk: main 1\n");
 	/* Perform platform setup in BL31 */
 	bl31_platform_setup();
 
+NOTICE("BL31: _jarsulk: main 2\n");
 	/* Initialise helper libraries */
 	bl31_lib_init();
+NOTICE("BL31: _jarsulk: main 3\n");
 
 #if EL3_EXCEPTION_HANDLING
 	INFO("BL31: Initialising Exception Handling Framework\n");
diff --git a/plat/imx/imx8m/imx8mp/imx8mp_bl31_setup.c b/plat/imx/imx8m/imx8mp/imx8mp_bl31_setup.c
index 348f900..1d5efdb 100644
--- a/plat/imx/imx8m/imx8mp/imx8mp_bl31_setup.c
+++ b/plat/imx/imx8m/imx8mp/imx8mp_bl31_setup.c
@@ -212,6 +212,7 @@ void bl31_early_platform_setup2(u_register_t arg0, u_register_t arg1,
 	unsigned int val;
 	unsigned int i;
 
+NOTICE("__jarsul: bl31_early_platform_setup2\n");
 	/* Enable CSU NS access permission */
 	for (i = 0; i < 64; i++) {
 		mmio_write_32(IMX_CSU_BASE + i * 4, 0x00ff00ff);
@@ -239,8 +240,18 @@ void bl31_early_platform_setup2(u_register_t arg0, u_register_t arg1,
 	 * tell BL3-1 where the non-secure software image is located
 	 * and the entry state information.
 	 */
-	bl33_image_ep_info.pc = PLAT_NS_IMAGE_OFFSET;
+NOTICE("__jarsul: bl31_early_platform_setup2_2\n");
+	// bl33_image_ep_info.pc = PLAT_NS_IMAGE_OFFSET;
+	bl33_image_ep_info.pc = 0x58000000;
 	bl33_image_ep_info.spsr = get_spsr_for_bl33_entry();
+
+	// Falcon mode AN13709 4.3.13 Configure the ATF to jump to Kernel image
+	// RAM FDT address
+	bl33_image_ep_info.args.arg0 = (u_register_t)0x48000000;
+	bl33_image_ep_info.args.arg1 = 0U;
+	bl33_image_ep_info.args.arg2 = 0U;
+	bl33_image_ep_info.args.arg3 = 0U;
+
 	SET_SECURITY_STATE(bl33_image_ep_info.h.attr, NON_SECURE);
 
 #if defined(SPD_opteed) || defined(SPD_trusty)
